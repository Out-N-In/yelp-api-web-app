package com.example.servingwebcontent;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Optional;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private EmployeeRepository employeeRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String firstName
            , @RequestParam String lastName, @RequestParam String birthDate
            , @RequestParam char gender, @RequestParam String hireDate) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Employees n = new Employees();

        n.setFirst_name(firstName);
        n.setLast_name(lastName);
        n.setBirth_date(birthDate);
        n.setGender(gender);
        n.setHire_date(hireDate);

        employeeRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Employees> getAllEmployees() {
        // This returns a JSON or XML with the users
        return employeeRepository.findAll();
    }

    @GetMapping(path="/emp_no")
    public @ResponseBody Optional<Employees> getEmployeeByEmpNo(Integer emp_no) {
        // This returns a JSON or XML with the users
        return employeeRepository.findById(emp_no);
    }
}